package puzzle8;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;


/**
 *
 * @author ABEDSSAMED
 */
public class TAQUINFormeOld extends javax.swing.JFrame {

    /**
     * Creates new form TAQUINForme
     */
    public TAQUINFormeOld() {
        initComponents();
        Lvl.setSelectedIndex(0);

    }
    int[][] gol = {{1, 2, 3}, {8, 0, 4}, {7, 6, 5}};
    int[][] easy = {{1, 3, 4}, {8, 6, 2}, {7, 0, 5}};//144491 node DFS, 38 bfs,13 male plac√©es ,10 manhaten
    int[][] medium = {{2, 8, 1}, {0, 4, 3}, {7, 6, 5}};
    int[][] hard = {{5, 2, 7}, {8, 4, 3}, {0, 1, 6}};
    int[][] random = {{2, 8, 3}, {1, 6, 4}, {7, 0, 5}};
    
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        panel1 = new java.awt.Panel();
        lbl00 = new java.awt.Label();
        lbl01 = new java.awt.Label();
        lbl02 = new java.awt.Label();
        lbl12 = new java.awt.Label();
        lbl11 = new java.awt.Label();
        lbl10 = new java.awt.Label();
        lbl20 = new java.awt.Label();
        lbl21 = new java.awt.Label();
        lbl22 = new java.awt.Label();
        Lvl = new javax.swing.JComboBox<>();
        SOLVEBTN = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        btnBFS = new javax.swing.JCheckBoxMenuItem();
        btnDFS = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        btnH1 = new javax.swing.JCheckBoxMenuItem();
        btnH2 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtOutput.setEditable(false);
        txtOutput.setBackground(new java.awt.Color(0, 0, 0));
        txtOutput.setColumns(20);
        txtOutput.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txtOutput.setForeground(new java.awt.Color(204, 204, 204));
        txtOutput.setRows(5);
        jScrollPane1.setViewportView(txtOutput);

        lbl00.setAlignment(java.awt.Label.CENTER);
        lbl00.setBackground(new java.awt.Color(0, 0, 0));
        lbl00.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbl00.setForeground(new java.awt.Color(255, 255, 255));
        lbl00.setText("1");

        lbl01.setAlignment(java.awt.Label.CENTER);
        lbl01.setBackground(new java.awt.Color(0, 0, 0));
        lbl01.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbl01.setForeground(new java.awt.Color(255, 255, 255));
        lbl01.setText("2");

        lbl02.setAlignment(java.awt.Label.CENTER);
        lbl02.setBackground(new java.awt.Color(0, 0, 0));
        lbl02.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbl02.setForeground(new java.awt.Color(255, 255, 255));
        lbl02.setText("3");

        lbl12.setAlignment(java.awt.Label.CENTER);
        lbl12.setBackground(new java.awt.Color(0, 0, 0));
        lbl12.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbl12.setForeground(new java.awt.Color(255, 255, 255));
        lbl12.setText("4");

        lbl11.setAlignment(java.awt.Label.CENTER);
        lbl11.setBackground(new java.awt.Color(0, 0, 0));
        lbl11.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbl11.setForeground(new java.awt.Color(255, 255, 255));
        lbl11.setText(" ");

        lbl10.setAlignment(java.awt.Label.CENTER);
        lbl10.setBackground(new java.awt.Color(0, 0, 0));
        lbl10.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbl10.setForeground(new java.awt.Color(255, 255, 255));
        lbl10.setText("8");

        lbl20.setAlignment(java.awt.Label.CENTER);
        lbl20.setBackground(new java.awt.Color(0, 0, 0));
        lbl20.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbl20.setForeground(new java.awt.Color(255, 255, 255));
        lbl20.setText("7");

        lbl21.setAlignment(java.awt.Label.CENTER);
        lbl21.setBackground(new java.awt.Color(0, 0, 0));
        lbl21.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbl21.setForeground(new java.awt.Color(255, 255, 255));
        lbl21.setText("6");

        lbl22.setAlignment(java.awt.Label.CENTER);
        lbl22.setBackground(new java.awt.Color(0, 0, 0));
        lbl22.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lbl22.setForeground(new java.awt.Color(255, 255, 255));
        lbl22.setText("5");

        Lvl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Medium", "Hard", "Random" }));
        Lvl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LvlItemStateChanged(evt);
            }
        });
        Lvl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LvlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(lbl00, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl01, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl02, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(lbl10, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl11, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl12, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(lbl20, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl21, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl22, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Lvl, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl01, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl00, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl02, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl10, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl11, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl12, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl20, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl21, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl22, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Lvl, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        SOLVEBTN.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        SOLVEBTN.setText("Solve");
        SOLVEBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SOLVEBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 283, Short.MAX_VALUE)
        );

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenuBar1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N

        jMenu2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 0, 153), null, null));
        jMenu2.setText("Solver");

        btnBFS.setSelected(true);
        btnBFS.setText("BFS");
        btnBFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBFSActionPerformed(evt);
            }
        });
        jMenu2.add(btnBFS);

        btnDFS.setText("DFS");
        btnDFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDFSActionPerformed(evt);
            }
        });
        jMenu2.add(btnDFS);

        jMenu3.setText("A √©toile");

        btnH1.setText("Heuristique 1 les case males plac√©es");
        btnH1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnH1ActionPerformed(evt);
            }
        });
        jMenu3.add(btnH1);

        btnH2.setText("Heuristique 1 distance de manhaten");
        btnH2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnH2ActionPerformed(evt);
            }
        });
        jMenu3.add(btnH2);

        jMenu2.add(jMenu3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SOLVEBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(246, 246, 246))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SOLVEBTN)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBFSActionPerformed
        // TODO add your handling code here:
        btnDFS.setState(false);
        btnH1.setState(false);
        btnH2.setState(false);


    }//GEN-LAST:event_btnBFSActionPerformed

    private void btnH1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnH1ActionPerformed
        // TODO add your handling code here:

        btnDFS.setState(false);
        btnBFS.setState(false);

        btnH2.setState(false);
    }//GEN-LAST:event_btnH1ActionPerformed
    public void Randomize() {

        int size = 9;

        ArrayList<Integer> list = new ArrayList<Integer>(size);
        for (int i = 0; i < size; i++) {
            list.add(i);
        }
        int[] v = new int[9];
        Random rand = new Random();
        int i = 0;

        while (list.size() > 0) {

            int index = rand.nextInt(list.size());

            v[i] = list.remove(index);

            i++;
        }
        int[][] m = new int[3][3];

        int x = 0, k = 0;
        for (int j = 0; j < 9; j++) {

            m[x][k] = v[j];
            k++;
            if (k == 3) {
                k = 0;
                x++;
            }
            if (x == 3) {
                break;
            }

        }
        for(int j=0;j<3;j++){
            for(int y=0;y<3;y++){
                random[j][y]=m[j][y];
            }
        }

    }

    public void set_resolve() {
        lbl00.setText("" + gol[0][0]);
        lbl01.setText("" + gol[0][1]);
        lbl02.setText("" + gol[0][2]);
        lbl10.setText("" + gol[1][0]);
        lbl11.setText("" + gol[1][1]);
        lbl12.setText("" + gol[1][2]);
        lbl20.setText("" + gol[2][0]);
        lbl21.setText("" + gol[2][1]);
        lbl22.setText("" + gol[2][2]);
    }
    private void LvlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LvlActionPerformed
        // TODO add your handling code here:
        if (Lvl.getSelectedItem() == "Easy") {
            lbl00.setText("" + easy[0][0]);
            lbl01.setText("" + easy[0][1]);
            lbl02.setText("" + easy[0][2]);
            lbl10.setText("" + easy[1][0]);
            lbl11.setText("" + easy[1][1]);
            lbl12.setText("" + easy[1][2]);
            lbl20.setText("" + easy[2][0]);
            lbl21.setText("" + easy[2][1]);
            lbl22.setText("" + easy[2][2]);

        }
        if (Lvl.getSelectedItem() == "Hard") {
            lbl00.setText("" + hard[0][0]);
            lbl01.setText("" + hard[0][1]);
            lbl02.setText("" + hard[0][2]);
            lbl10.setText("" + hard[1][0]);
            lbl11.setText("" + hard[1][1]);
            lbl12.setText("" + hard[1][2]);
            lbl20.setText("" + hard[2][0]);
            lbl21.setText("" + hard[2][1]);
            lbl22.setText("" + hard[2][2]);
        }
        if (Lvl.getSelectedItem() == "Medium") {
            lbl00.setText("" + medium[0][0]);
            lbl01.setText("" + medium[0][1]);
            lbl02.setText("" + medium[0][2]);
            lbl10.setText("" + medium[1][0]);
            lbl11.setText("" + medium[1][1]);
            lbl12.setText("" + medium[1][2]);
            lbl20.setText("" + medium[2][0]);
            lbl21.setText("" + medium[2][1]);
            lbl22.setText("" + medium[2][2]);
        }
        if (Lvl.getSelectedItem() == "Random") {
            
            lbl00.setText("" + random[0][0]);
            lbl01.setText("" + random[0][1]);
            lbl02.setText("" + random[0][2]);
            lbl10.setText("" + random[1][0]);
            lbl11.setText("" + random[1][1]);
            lbl12.setText("" + random[1][2]);
            lbl20.setText("" + random[2][0]);
            lbl21.setText("" + random[2][1]);
            lbl22.setText("" + random[2][2]);
        }
    }//GEN-LAST:event_LvlActionPerformed

    private void LvlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LvlItemStateChanged
        // TODO add your handling code here:
        btnDFS.setSelected(false);
        btnH1.setSelected(false);
        btnH2.setSelected(false);
    }//GEN-LAST:event_LvlItemStateChanged
    TaquinNode easyNode = new TaquinNode(this.easy);
    TaquinNode hardNode = new TaquinNode(this.hard);
    TaquinNode RandomNode = new TaquinNode(this.random);
    TaquinNode mediumNode = new TaquinNode(this.medium);
    BFS searchBFS = null;
    DFS searchDFS = null;
    Astar searchAstar = null;
    private void SOLVEBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SOLVEBTNActionPerformed
        // TODO add your handling code here:

        if (Lvl.getSelectedItem() == "Easy") {

            if (btnBFS.isSelected()) {
                txtOutput.setText("search with BFS :Easy\n");
                this.searchBFS = new BFS(this.easyNode);
                long startTime = System.currentTimeMillis();

                this.searchBFS.search();
                long endTime = System.currentTimeMillis();

                String txt = "this is the path : \n " + this.searchBFS.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);

            } else if (btnDFS.isSelected()) {

                txtOutput.setText("search with DFS :Easy \n");
                this.searchDFS = new DFS(this.easyNode);
                long startTime = System.currentTimeMillis();
                this.searchDFS.search();
                long endTime = System.currentTimeMillis();

                String txt = "this is the path : \n " + this.searchDFS.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);

            } else if (btnH1.isSelected()) {
                txtOutput.setText("search with A* huristique des case male plac√©es :Easy\n");
                this.searchAstar = new Astar(this.easyNode, 1);
                long startTime = System.currentTimeMillis();
                this.searchAstar.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchAstar.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);

            } else if (btnH2.isSelected()) {
                txtOutput.setText("search with A* huristique distance de manhaten:Easy \n");

                this.searchAstar = new Astar(this.easyNode, 2);
                long startTime = System.currentTimeMillis();
                this.searchAstar.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchAstar.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);
            }

        }
        if (Lvl.getSelectedItem() == "Hard") {

            if (btnBFS.isSelected()) {
                txtOutput.setText("search with BFS :Hard \n");
                this.searchBFS = new BFS(this.hardNode);
                long startTime = System.currentTimeMillis();
                this.searchBFS.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchBFS.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);
            } else if (btnDFS.isSelected()) {
                txtOutput.setText("search with DFS :Hard  \n");
                this.searchDFS = new DFS(this.hardNode);
                long startTime = System.currentTimeMillis();
                this.searchDFS.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchDFS.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);

            } else if (btnH1.isSelected()) {
                txtOutput.setText("search with A* huristique des case male plac√©es :Hard  \n");
                this.searchAstar = new Astar(this.hardNode, 1);
                long startTime = System.currentTimeMillis();
                this.searchAstar.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchAstar.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);
            } else if (btnH2.isSelected()) {
                txtOutput.setText("search with A* huristique distance de manhaten  :Hard \n");
                this.searchAstar = new Astar(this.hardNode, 2);
                long startTime = System.currentTimeMillis();
                this.searchAstar.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchAstar.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);
            }
        }
        if (Lvl.getSelectedItem() == "Medium") {

            if (btnBFS.isSelected()) {
                txtOutput.setText("search with BFS :Medium \n");
                this.searchBFS = new BFS(this.mediumNode);
                long startTime = System.currentTimeMillis();
                this.searchBFS.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchBFS.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);

            } else if (btnDFS.isSelected()) {
                txtOutput.setText("search with DFS :Medium \n");
                this.searchDFS = new DFS(this.mediumNode);
                long startTime = System.currentTimeMillis();
                this.searchDFS.search();
                long endTime = System.currentTimeMillis();

                String txt = "this is the path : \n " + this.searchDFS.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);

            } else if (btnH1.isSelected()) {
                txtOutput.setText("search with A* huristique des case male plac√©es :Medium \n");
                this.searchAstar = new Astar(this.mediumNode, 1);
                long startTime = System.currentTimeMillis();

                this.searchAstar.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchAstar.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);
            } else if (btnH2.isSelected()) {
                txtOutput.setText("search with A* huristique distance de manhaten :Medium \n");
                this.searchAstar = new Astar(this.mediumNode, 2);
                long startTime = System.currentTimeMillis();
                this.searchAstar.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchAstar.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);
            }
        }
        if (Lvl.getSelectedItem() == "Random") {

            if (btnBFS.isSelected()) {
                txtOutput.setText("search with BFS :Random Configuration \n");
                this.searchBFS = new BFS(this.RandomNode);
                long startTime = System.currentTimeMillis();
                this.searchBFS.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchBFS.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";
                txtOutput.append(txt);

            } else if (btnDFS.isSelected()) {
                txtOutput.setText("search with DFS  :Random Configuration\n");
                this.searchDFS = new DFS(this.RandomNode);
                long startTime = System.currentTimeMillis();
                this.searchDFS.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchDFS.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";

                txtOutput.append(txt);
            } else if (btnH1.isSelected()) {
                txtOutput.setText("search with A* huristique des case male plac√©es:Random Configuration \n");
                this.searchAstar = new Astar(this.RandomNode, 1);
                long startTime = System.currentTimeMillis();
                this.searchAstar.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchAstar.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";

                txtOutput.append(txt);
            } else if (btnH2.isSelected()) {
                txtOutput.setText("search with A* huristique distance de manhaten :Random Configuration \n");
                this.searchAstar = new Astar(this.RandomNode, 2);
                long startTime = System.currentTimeMillis();
                this.searchAstar.search();
                long endTime = System.currentTimeMillis();
                String txt = "this is the path : \n " + this.searchAstar.Pathstr;
                txt = txt + "\n" + "temp d'ex√©cution :" + (endTime - startTime) + " milliseconds \n";

                txtOutput.append(txt);
            }
        }
        set_resolve();


    }//GEN-LAST:event_SOLVEBTNActionPerformed

    private void btnDFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDFSActionPerformed
        // TODO add your handling code here:
        btnBFS.setState(false);
        btnH1.setState(false);
        btnH2.setState(false);
    }//GEN-LAST:event_btnDFSActionPerformed

    private void btnH2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnH2ActionPerformed
        // TODO add your handling code here:
        btnBFS.setState(false);
        btnDFS.setState(false);
        btnH1.setState(false);

    }//GEN-LAST:event_btnH2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TAQUINFormeOld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TAQUINFormeOld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TAQUINFormeOld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TAQUINFormeOld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TAQUINFormeOld().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Lvl;
    private javax.swing.JButton SOLVEBTN;
    private javax.swing.JCheckBoxMenuItem btnBFS;
    private javax.swing.JCheckBoxMenuItem btnDFS;
    private javax.swing.JCheckBoxMenuItem btnH1;
    private javax.swing.JCheckBoxMenuItem btnH2;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label lbl00;
    private java.awt.Label lbl01;
    private java.awt.Label lbl02;
    private java.awt.Label lbl10;
    private java.awt.Label lbl11;
    private java.awt.Label lbl12;
    private java.awt.Label lbl20;
    private java.awt.Label lbl21;
    private java.awt.Label lbl22;
    private java.awt.Panel panel1;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables
}
